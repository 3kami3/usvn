<? $this->dojo()->enable()
        ->requireModule('dijit.Dialog')->requireModule('dojox.fx.easing'); ?>

<script type="text/javascript">

    var dlg;
    var div = document.createElement("div");
    div.id = "dlg";
    var nbGroups = 0;

    dojo.addOnLoad(
        function()
        {
            dlg = new dijit.Dialog(
            {
                title: "<?= T_('Rights') ?>",
                id: "dlgDiv",
            });
        }
    );

    function updateRights(path)
    {
        for (i = 0; i < nbGroups; i++)
        {
            // get the values
            var group = document.getElementById('group' + i).innerHTML;
            var read = (document.getElementById('read' + group).checked == true ? '1' : '0');
            var write = (document.getElementById('write' + group).checked == true ? '1' : '0');
            // send it
            dojo.xhrPost(
                {
                    url: "<?= $this->url(array('controller' => 'browserajax',
                                               'project' => $this->project->name,
                                               'action' => 'updaterights',
                                               'path' => '" + path + "',
                                              ),
                                              'browserajax', true, false) ?>",
                    timeout: 5000,
                    content: {'newRights' : group + ',' + read + ',' + write},
                }
            );
        }
/*
        var anim = dojo.fx.slideTo({
            node: 'dlgDiv', left:"500", top:"-100", unit:"px" }).play()
*/
        dlg.onCancel();

    }

    function addHeaderToTable(table)
    {
        row = table.insertRow(0);
        col = document.createElement('th');
        col = row.appendChild(col);
        col.innerHTML = '<?= T_('Group') ?>';
        col = document.createElement('th');
        col = row.appendChild(col);
        col.setAttribute('width', '3%');
        col.innerHTML = '<?= T_('Read') ?>';
        col = document.createElement('th');
        col = row.appendChild(col);
        col.setAttribute('width', '3%');
        col.innerHTML = '<?= T_('Write') ?>';
        col = document.createElement('th');
        col = row.appendChild(col);
        col.setAttribute('width', '3%');
        col.innerHTML = '<?= T_('Recursive') ?>';
    }

    function addToTable(i, table, name, disabled, read, write)
    {
        row = table.insertRow(i + 1);
        col = row.insertCell(0);
        col.setAttribute('id', 'group' + i)
        col.innerHTML = name;
        // read
        col = row.insertCell(1);
        col.setAttribute('style', 'text-align:center');
        str = '<?= '<input id="read'; ?>' + name + '<?= '" type="checkbox"'; ?>';
        if (read == 1)
            str += '<?= ' checked="checked" '; ?>';
        if (disabled == 1)
            str += '<?= ' disabled'; ?>';
        str += '>';
        col.innerHTML = str;
        // write
        col = row.insertCell(2);
        col.setAttribute('style', 'text-align:center');
        str = '<?= '<input id="write'; ?>' + name + '<?= '" type="checkbox"'; ?>';
        if (write == 1)
            str += '<?= ' checked="checked" '; ?>';
        if (disabled == 1)
            str += '<?= ' disabled'; ?>';
        str += '>';
        col.innerHTML = str;
        // recursive
        col = row.insertCell(3);
        col.setAttribute('style', 'text-align:center');
        col.innerHTML = '-';
    }

    function parseXml(xml, path)
    {
        if (div.hasChildNodes('rights'))
        {
            var oldRights = document.getElementById('rights');
            div.removeChild(oldRights);
        }
        divRights = document.createElement('div');
        divRights.setAttribute('id', 'rights');
        var table = document.createElement('table');
        table.setAttribute('class', 'usvn_table');
        divRights.appendChild(table);
        div.appendChild(divRights)
        addHeaderToTable(table);
        var root = xml.getElementsByTagName('root')[0];
        for (var i = 0; i < root.childNodes.length; i++)
        {
            if (root.hasChildNodes('group'))
                var group = root.getElementsByTagName('group')[i];
            if (group == null)
                break;
            var name = group.getElementsByTagName('name')[0].childNodes[0].nodeValue;
            var disabled = group.getElementsByTagName('disabled')[0].childNodes[0].nodeValue;
            var read = group.getElementsByTagName('read')[0].childNodes[0].nodeValue;
            var write = group.getElementsByTagName('write')[0].childNodes[0].nodeValue;
            addToTable(i, table, name, disabled, read, write);
        }
        nbGroups = i;
        confirm = document.createElement('a');
        confirm.setAttribute('href', '#');
        confirm.setAttribute('onclick', 'updateRights(' + path + ')');
        confirm.setAttribute('style', 'border: 1px solid #135675; float: right; margin: 7px 19px; padding: 2px 10px;');
        confirm.innerHTML = 'OK';
        divRights.appendChild(confirm);
        dlg.setAttribute('style', 'width: 400px');
        dlg.attr('content', div);
        dlg.attr('draggable', false);
        dlg.show();
    }

    function showDialog(path)
    {
        dojo.xhrGet(
            {
                url: "<?= $this->url(array('controller' => 'browserajax',
                                           'project' => $this->project->name,
                                           'action' => 'dumprights',
                                           'path' => '" + path + "',
                                          ),
                                          'browserajax', true, false) ?>",
                handleAs: "xml",
                timeout: 5000,
                load: function(response, ioArgs)
                    {
                        if (response == null)
                        {
                            var parser = new DOMParser();
                            var response = parser.parseFromString(ioArgs.xhr.responseText, 'text/xml');
                        }
                        parseXml(response, path);
                        dojo.byId("replace").innerHTML = response;
                    },
            }
        );
    }
/*
        function()
        {
            dojo.animateProperty({
                node: "dlgDiv",
                easing: dojox.fx.easing.elasticOut,
                properties: {
                    top: { end: 100 },
                    left: { end: 100 }
                }
            }).play();
        }
*/
</script>

<div class="usvn_info">
<h1><?= T_("Files list") ?></h1>
</div>

<div class="usvn_info" style="vertical-align: middle;">
    <div class="browser-path">
        <?
            $tabPath = explode('/', $this->path);
            $tabLen = count($tabPath) - 1;
            $i = 0;
            $path = '';
        ?>
        <? foreach ($tabPath as $folder): ?>
            <? if ($i < $tabLen): ?>
                <? if ($i == 0): ?>
                    <a href="<?= $this->url(array('controller' => $this->controller,
                        'project' => $this->project->name,
                        'action' => $this->action,
                        'path' => ('')
                        ),
                        'browser', true, false) ?>">
                        <span>root</span><b></b>
                    </a>
                <? else: ?>
                    <? $path = $path . $folder . '/' ?>
                    <a href="<?= $this->url(array('controller' => $this->controller,
                        'project' => $this->project->name,
                        'action' => $this->action,
                        'path' => ($path)
                        ),
                        'browser', true, false) ?>">
                        <span><?= $folder ?></span><b></b>
                    </a>
                <? endif ?>
            <? elseif ($folder != ''): ?>
                <strong><span><?= $folder ?></span><b></b></strong>
            <? endif; $i++; ?>
        <? endforeach ?>
    </div>
    <br />
    <table class="usvn_table">
        <tr>
            <th><?= T_('Name') ?></th>
            <th><?= T_('Revision') ?></th>
            <th><?= T_('Author') ?></th>
            <th><?= T_('Date') ?></th>
            <? if ($this->isAdmin): ?>
                <th><?= T_('Action') ?></th>
            <? endif ?>
        </tr>

        <? if ($this->path != '/'): ?>
            <tr>
                <td colspan="5">
                    <a href="<?= $this->url(array('controller' => $this->controller,
                        'project' => $this->project->name,
                        'action' => $this->action,
                        'path' => (dirname($this->path) == '/' ? '' : dirname($this->path))
                        ),
                        'browser', true, false) ?>">
                        <span style="display: block;"><?= $this->img('folder_up.png', T_('Folder')) . ' ..' ?></span>
                    </a>
                </td>
            </tr>
        <? endif ?>

        <? foreach ($this->files as $file): ?>
        <tr>
            <? if ($file['isDirectory'] === False): ?>
                <td>
                    <a href="<?= $this->url(array('controller' => $this->controller,
                        'area' => 'project',
                        'project' => $this->project->name,
                        'action' => $this->action,
                        'file' => ($file['path'][0] == '/' ? substr($file['path'], 1) : $file['path'])
                        ),
                        'show', true, false) ?>" style="display: block;">
                        <?= $this->img('file.png', T_('Folder')) . ' ' . $file['name'] ?>
                        <span style="color: #444444">(<?= $this->fileSize($file['size'], 0, 'si') ?>)</span>
                    </a>
                </td>
            <? else: ?>
                <td>
                    <a href="<?= $this->url(array('controller' => $this->controller,
                        'project' => $this->project->name,
                        'action' => $this->action,
                        'path' => ($file['path'][0] == '/' ? substr($file['path'], 1) : $file['path'])
                        ),
                        'browser', true, false) ?>" style="display: block;">
                        <?= $this->img('folder.png', T_('Folder')) . ' ' . $file['name'] ?>
                    </a>
                </td>
            <? endif ?>

            <td class="align-center">
                <a href="<?= $this->url(array('controller' => $this->controller,
                    'project' => $this->project->name,
                    'action' => 'commit',
                    'commit' => $file['revision']
                    ),
                    'commit', true, false) ?>" style="display: block;">
                    <?= $file['revision'] ?>
                </a>
            </td>
            <td class="align-center"><?= array_key_exists('author', $file) ? $file['author'] : '' ?></td>
            <?php $date = new Zend_Date($file['date']); ?>
            <td class="align-center"><?= $date->toString(Zend_Date::DATETIME_SHORT) ?></td>
            <? if ($this->isAdmin): ?>
                <td class="align-center"><a href="#" onClick="showDialog(<?= "'" . $file['path'] . "'" ?>)"><?= $this->img('lock.png', T_('Rights'))?></a></td>
            <? endif ?>
        </tr>
        <? endforeach ?>
    </table>
</div>

<!--
<div class="usvn_info">
  <div id="txthtml2">
  </div>
</div>
<div id="bulle" class="bubblerights" align="center"></div>
<script type="text/javascript">
register_position();
getListFile('<?php echo $this->back ?>');
</script>
-->