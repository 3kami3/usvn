<?php
/**
 * Installation operations
 *
 * @author Team USVN <contact@usvn.info>
 * @link http://www.usvn.info
 * @license http://www.cecill.info/licences/Licence_CeCILL_V2-en.txt CeCILL V2
 * @copyright Copyright 2007, Team USVN
 * @since 0.5
 * @package install
 *
 * This software has been written at EPITECH <http://www.epitech.net>
 * EPITECH, European Institute of Technology, Paris - FRANCE -
 * This project has been realised as part of
 * end of studies project.
 *
 * $Id: InstallDBTest.php 524 2007-05-20 14:17:13Z crivis_s $
 */

// Call InstallTest::main() if this source file is executed directly.
if (!defined("PHPUnit_MAIN_METHOD")) {
	define("PHPUnit_MAIN_METHOD", "InstallDbSqLiteTest::main");
}

require_once "PHPUnit/Framework/TestCase.php";
require_once "PHPUnit/Framework/TestSuite.php";

require_once 'www/install/Install.php';
require_once 'www/USVN/autoload.php';

/**
 * Test class for Install.
 * Generated by PHPUnit_Util_Skeleton on 2007-03-20 at 09:07:00.
 */
class InstallDbSqLiteTest extends USVN_Test_Test {
	/**
	 * @var Zend_Db_Adapter_Abstract
	 */
	private $db;

	/**
     * Runs the test methods of this class.
     *
     * @access public
     * @static
     */
	public static function main() {
		require_once "PHPUnit/TextUI/TestRunner.php";

		$suite  = new PHPUnit_Framework_TestSuite("InstallDbSqLiteTest");
		$result = PHPUnit_TextUI_TestRunner::run($suite);
	}

	private function clean()
	{
		if (file_exists("usvn-test")) {
			@unlink("usvn-test");
		}
	}

	public function setUp() {
		parent::setUp();
		if (getenv('DB') != '' && getenv('DB') != 'PDO_SQLITE') {
			$this->markTestSkipped("Bad database");
		}

		$this->clean();
		$_SERVER['SERVER_NAME'] = "localhost";
		$_SERVER['REQUEST_URI'] = "/test/install/index.php?step=7";
	}

	public function ConnectToDatabase(){
		$params = array ('host' => 'localhost',
		'dbname'   => 'usvn-test');
		$this->db = Zend_Db::factory('PDO_SQLITE', $params);
		Zend_Db_Table::setDefaultAdapter($this->db);
		//USVN_Db_Utils::deleteAllTables($this->db);
		//$this->db->closeConnection();
	}
	public function tearDown() {
		$this->clean();
		parent::tearDown();
	}

	public function testInstallDbTestLoadDb() {
		Install::installDb("tests/tmp/config.ini", "www/SQL", "localhost", "usvn-test", "usvn-test", "usvn-test", "usvn_", "PDO_SQLITE", false);
		$this->ConnectToDatabase();
		$list_tables =  $this->db->listTables();
		$this->assertTrue(in_array('usvn_users', $list_tables), "usvn_users does not exist");
		$this->assertTrue(in_array('usvn_groups', $list_tables), "usvn_groups does not exist");
		$userTable = new USVN_Db_Table_Users();
		$this->assertEquals(null, $userTable->fetchRow(array('users_login = ?' => 'anonymous')));
		$this->assertEquals(0, count($userTable->fetchAll()));
		$this->db->closeConnection();
	}

	public function testInstallDbTestLoadDbOtherPrefixe() {
		Install::installDb("tests/tmp/config.ini", "www/SQL", "localhost", "usvn-test", "usvn-test", "usvn-test", "fake_", "PDO_SQLITE", false);
		$this->ConnectToDatabase();
		$list_tables =  $this->db->listTables();
		$this->assertFalse(in_array('usvn_users', $list_tables), "usvn_users exists but shouldn't exist");
		$this->assertFalse(in_array('usvn_groups', $list_tables), "usvn_groups exists but shouldn't exist");
		$this->assertTrue(in_array('fake_users', $list_tables), "usvn_users does not exist");
		$this->assertTrue(in_array('fake_groups', $list_tables), "fake_groups does not exist");
		$this->db->closeConnection();
	}

	public function testInstallDbTestConfigFile() {
		Install::installDb("tests/tmp/config.ini", "www/SQL", "localhost", "usvn-test", "usvn-test", "usvn-test", "usvn_", "PDO_SQLITE", false);
		$this->assertTrue(file_exists("tests/tmp/config.ini"));
		$config = new Zend_Config_Ini("tests/tmp/config.ini", "general");
		$this->assertEquals("localhost", $config->database->options->host);
		$this->assertEquals("usvn-test", $config->database->options->dbname);
		$this->assertEquals("usvn-test", $config->database->options->username);
		$this->assertEquals("usvn-test", $config->database->options->password);
		$this->assertEquals("PDO_SQLITE", $config->database->adapterName);
		$this->assertEquals("usvn_", $config->database->prefix);
	}

	public function testInstallAdmin()	{
		file_put_contents("tests/tmp/config.ini", "[general]\nsubversion.path=tests/tmp/");
		Install::installDb("tests/tmp/config.ini", "www/SQL", "localhost", "usvn-test", "usvn-test", "usvn-test", "usvn_", "PDO_SQLITE", false);
		$this->ConnectToDatabase();
		Install::installAdmin("tests/tmp/config.ini", "root", "secretpassword", "James", "Bond", "james@bond.fr");
		$userTable = new USVN_Db_Table_Users();
		$user = $userTable->fetchRow(array('users_login = ?' => 'root'));
		$this->assertNotEquals(False, $user);
		$this->assertTrue(USVN_Crypt::checkPassword("secretpassword", $user->password));
		$this->assertEquals("James", $user->firstname);
		$this->assertEquals("Bond", $user->lastname);
		$this->assertEquals(true, $user->is_admin);
		$groupTable = new USVN_Db_Table_Groups();
		$this->assertEquals(0, count($groupTable->fetchAll()));
	}
}

// Call InstallTest::main() if this source file is executed directly.
if (PHPUnit_MAIN_METHOD == "InstallDbSqLiteTest::main") {
	InstallDbSqLiteTest::main();
}
?>
