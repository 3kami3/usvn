<?php
/**
 * Get a precise revision
 *
 * @author Team USVN <contact@usvn.info>
 * @link http://www.usvn.info
 * @license http://www.cecill.info/licences/Licence_CeCILL_V2-en.txt CeCILL V2
 * @copyright Copyright 2007, Team USVN
 * @since 0.5
 * @package versionning
 * @subpackage revision
 *
 * This software has been written at EPITECH <http://www.epitech.net>
 * EPITECH, European Institute of Technology, Paris - FRANCE -
 * This project has been realised as part of
 * end of studies project.
 *
 * $Id$
 */

// Call USVN_Versioning_RevisionTest::main() if this source file is executed directly.
if (!defined("PHPUnit_MAIN_METHOD")) {
	define("PHPUnit_MAIN_METHOD", "USVN_Versioning_RevisionTest::main");
}

require_once "PHPUnit/Framework/TestCase.php";
require_once "PHPUnit/Framework/TestSuite.php";

require_once 'www/USVN/autoload.php';

/**
 * Test class for USVN_Versioning_Revision.
 * Generated by PHPUnit_Util_Skeleton on 2007-03-25 at 15:01:33.
 */
class USVN_Versioning_RevisionTest extends USVN_Versioning_AbstractVersioningTest {
	/**
     * Runs the test methods of this class.
     *
     * @access public
     * @static
     */
	public static function main() {
		require_once "PHPUnit/TextUI/TestRunner.php";

		$suite  = new PHPUnit_Framework_TestSuite("USVN_Versioning_RevisionTest");
		$result = PHPUnit_TextUI_TestRunner::run($suite);
	}

	public function testGetProject()
	{
		$revision = new USVN_Versioning_Revision(2, 1);
		$this->assertEquals(2, $revision->getProject());
	}

	public function testGetRevisionNumber()
	{
		$revision = new USVN_Versioning_Revision(2, 1);
		$this->assertEquals(1, $revision->getRevisionNumber());
	}

	public function testGetMessage()
	{
		$revision = new USVN_Versioning_Revision(1, 1);
		$this->assertEquals("First commit", $revision->getMessage());
		$revision = new USVN_Versioning_Revision(1, 2);
		$this->assertEquals("Second commit", $revision->getMessage());
		$revision = new USVN_Versioning_Revision(2, 1);
		$this->assertEquals("Commit to another project", $revision->getMessage());
	}

	public function testGetAuthor()
	{
		$revision = new USVN_Versioning_Revision(1, 1);
		$this->assertEquals(1, $revision->getAuthor());
		$revision = new USVN_Versioning_Revision(1, 2);
		$this->assertEquals(2, $revision->getAuthor());
		$revision = new USVN_Versioning_Revision(2, 2);
		$this->assertEquals(1, $revision->getAuthor());
	}

	public function testGetFiles()
	{
		$revision = new USVN_Versioning_Revision(2, 1);
		$files = $revision->getFiles();
		$this->assertEquals(2, $files->getProject());
		$this->assertEquals(1, $files->getRevisionNumber());
	}
}

// Call USVN_Versioning_RevisionTest::main() if this source file is executed directly.
if (PHPUnit_MAIN_METHOD == "USVN_Versioning_RevisionTest::main") {
	USVN_Versioning_RevisionTest::main();
}
?>
