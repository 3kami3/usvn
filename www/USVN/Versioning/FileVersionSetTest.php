<?php
/**
 * A set of USVN_Versioning_FileVersion
 *
 * @author Team USVN <contact@usvn.info>
 * @link http://www.usvn.info
 * @license http://www.cecill.info/licences/Licence_CeCILL_V2-en.txt CeCILL V2
 * @copyright Copyright 2007, Team USVN
 * @since 0.5
 * @package versionning
 * @subpackage file
 *
 * This software has been written at EPITECH <http://www.epitech.net>
 * EPITECH, European Institute of Technology, Paris - FRANCE -
 * This project has been realised as part of
 * end of studies project.
 *
 * $Id$
 */

// Call USVN_Versioning_FileVersionSetTest::main() if this source file is executed directly.
if (!defined("PHPUnit_MAIN_METHOD")) {
    define("PHPUnit_MAIN_METHOD", "USVN_Versioning_FileVersionSetTest::main");
}

require_once "PHPUnit/Framework/TestCase.php";
require_once "PHPUnit/Framework/TestSuite.php";

require_once 'www/USVN/autoload.php';

/**
 * Test class for USVN_Versioning_FileVersionSet.
 * Generated by PHPUnit_Util_Skeleton on 2007-03-25 at 15:01:41.
 */
class USVN_Versioning_FileVersionSetTest extends USVN_Versioning_AbstractVersioningTest {
    /**
     * Runs the test methods of this class.
     *
     * @access public
     * @static
     */
    public static function main() {
        require_once "PHPUnit/TextUI/TestRunner.php";

        $suite  = new PHPUnit_Framework_TestSuite("USVN_Versioning_FileVersionSetTest");
        $result = PHPUnit_TextUI_TestRunner::run($suite);
    }

	public function testGetProject()
	{
		$set = new USVN_Versioning_FileVersionSet(2, 1);
		$this->assertEquals(2, $set->getProject());
	}
/*
	public function testGetRevisionNumber()
	{
		$set = new USVN_Versioning_FileVersionSet(2, 1);
		$this->assertEquals(1, $set->getRevisionNumber());
	}

    public function testKey()
	{
		$set = new USVN_Versioning_FileVersionSet(2, 1);
		$this->assertEquals(0, $set->key());
		$set->next();
		$this->assertEquals(1, $set->key());
		$set->next();
		$this->assertEquals(2, $set->key());
    }

    /*public function testNextCurrentRewind()
	{
		$set = new USVN_Versioning_FileVersionSet(2, 1);
		$first = $set->current()->getPath();
		$set->next();
		$this->assertNotEquals($first, $set->current()->getPath());
		$set->rewind();
		$this->assertEquals($first, $set->current()->getPath());
    }*/

  /*  public function testValid()
	{
		$set = new USVN_Versioning_FileVersionSet(2, 1);
		$this->assertTrue($set->valid());
		$set->next();
		$this->assertTrue($set->valid());
		$set->next();
		$this->assertFalse($set->valid());
    }*/

}

// Call USVN_Versioning_FileVersionSetTest::main() if this source file is executed directly.
if (PHPUnit_MAIN_METHOD == "USVN_Versioning_FileVersionSetTest::main") {
    USVN_Versioning_FileVersionSetTest::main();
}
?>
