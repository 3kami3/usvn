<?xml version="1.0"?>
<project name="USVN" basedir="." default="all">
  <property name="version" value="0.1" override="true" />
  <property name="docdir" value="apidocs" override="true" />
  <property name="testdir" value="tests" override="true" />
  <property name="report_test_dir" value="report" override="true" />
  <property name="cover_report_dir" value="cover-report" override="true" />
  <property name="archivedir" value="archive" override="true" />

 <!-- File set -->
  <fileset id="testfile" dir="${testdir}">
        <include name="**/test_*.php" />
  </fileset>

    <fileset id="projectfile" dir=".">
        <include name="**/*.php" />
        <include name="*.xml" />
        <exclude name="${docdir}/**" />
        <exclude name="${report_test_dir}/**" />
        <exclude name="${testdir}/**" />
    </fileset>

<!-- Target -->
  <target name="all">
    <echo msg="Build USVN ${version}" />
    <phingcall target="lint" />
    <phingcall target="test" />
    <phingcall target="doc" />
  </target>

  <target name="release">
    <echo msg="Release USVN ${version}" />
    <phingcall target="lint" />
    <phingcall target="test" />
    <phingcall target="doc" />
    <phingcall target="tar" />
  </target>

    <target name="test">
        <delete file="${report_test_dir}/*" />
        <mkdir dir="${report_test_dir}" />
        <phpunit2 haltonfailure="false" failureproperty="unit_test_failure" printsummary="true">
            <batchtest>
                <fileset refid="testfile" />
            </batchtest>
            <formatter type="xml" todir="${report_test_dir}" outfile="logfile.xml" />
            <formatter type="plain" todir="${report_test_dir}" outfile="logfile.txt" />
        </phpunit2>
        <phpunit2report infile="${report_test_dir}/logfile.xml" styledir="phing" format="frames" todir="${report_test_dir}" />
        <fail if="unit_test_failure" message="Unit tests failed!!!" />
    </target>

    <target name="cover">
        <delete file="${cover_report_dir}/*" />
        <mkdir dir="${cover_report_dir}" />
        <coverage-setup database="${cover_report_dir}/database">
            <fileset dir=".">
                <include name="**/*.php"/>
                <exclude name="${testdir}/**" />
            </fileset>
        </coverage-setup>

        <phpunit2 codecoverage="true">
            <batchtest>
                <fileset refid="testfile" />
            </batchtest>
        </phpunit2>

        <coverage-report outfile="${cover_report_dir}/coverage.xml">
            <report styledir="phing" todir="${cover_report_dir}"/>
        </coverage-report>
    </target>

  <target name="doc">
    <delete dir="${docdir}" />
    <mkdir dir="${docdir}" />
    <phpdoc title="USVN Documentation" destdir="${docdir}"
    sourcepath="." output="HTML:Smarty:PHP" />
  </target>

  <target name="lint">
    <phplint>
        <fileset dir=".">
            <exclude name="${docdir}/**" />
            <exclude name="${report_test_dir}/**" />
            <include name="**/*.php"/>
        </fileset>
    </phplint>
</target>

<!-- Generation des archives -->
  <target name="tar">
    <mkdir dir="${archivedir}" />
    <delete file="${archivedir}/usvn-${version}.tgz" />
    <delete file="${archivedir}/usvn-${version}.tgz.md5" />
    <delete file="${archivedir}/usvn-doc-${version}.tgz" />
    <tar destfile="${archivedir}/usvn-${version}.tgz" compression="gzip">
        <fileset refid="projectfile" />
    </tar>
    <php function="md5_file" returnProperty="md5file">
        <param value="${archivedir}/usvn-${version}.tgz"/>
    </php>
    <echo msg="${md5file}" file="${archivedir}/usvn-${version}.tgz.md5"/>
    <tar destfile="${archivedir}/usvn-doc-${version}.tgz" compression="gzip">
      <fileset id="docfile" dir="${docdir}">
        <include name="**" />
      </fileset>
    </tar>
  </target>
</project>
