<?xml version="1.0"?>
<project name="USVN" basedir="." default="all">
  <property name="license" value="CECILL" override="true" />
  <property name="version" value="0.5.0" override="true" />
  <property name="status" value="alpha" override="true" />
  <property name="docdir" value="apidocs" override="true" />
  <property name="testdir" value="tests" override="true" />
  <property name="report_test_dir" value="test-report" override="true" />
  <property name="cover_report_dir" value="cover-report" override="true" />
  <property name="archive_dir" value="archive" override="true" />

  <property name="release_note" value="First public version" override="true" />


 <!-- File set -->
  <fileset id="testfile" dir=".">
		<include name="**/*Test.php" />
        <exclude name="${docdir}/**" />
        <exclude name="${report_test_dir}/**" />
        <exclude name="${testdir}/**" />
        <exclude name="**/.svn/**" />
        <exclude name="phing/**" />
        <exclude name="scripts**" />
		<exclude name="private/**" />
		<exclude name="SQL/**" />
		<exclude name="LICENSE/**" />
</fileset>

    <fileset id="projectfile" dir=".">
        <include name="**/*.php" />
        <include name="**/*.xml" />
        <exclude name="${docdir}/**" />
        <exclude name="${report_test_dir}/**" />
        <exclude name="${testdir}/**" />
        <exclude name="www/USVN/Test/**" />
    </fileset>

<!-- Target -->
  <target name="all">
    <echo msg="Build USVN ${version} ${status}" />
    <phingcall target="lint" />
    <phingcall target="translation-compilation" />
    <phingcall target="test" />
    <phingcall target="doc" />
  </target>

    <target name="release">
        <echo msg="Release USVN ${version}" />
        <phingcall target="lint" />
        <phingcall target="test" />
        <phingcall target="doc" />
        <phingcall target="tar" />
    </target>

    <target name="clean">
        <delete dir="${docdir}" />
        <delete dir="${report_test_dir}" />
        <delete dir="${cover_report_dir}" />
        <delete dir="${archive_dir}" />
        <delete>
            <fileset dir=".">
                <include name="**/svn-commit*" />
            </fileset>
        </delete>
    </target>

    <target name="test">
		<if>
			<not>
				<available file="config.ini.save" />
			</not>
			<then>
				<php function="copy">
					<param value="www/config.ini"/>
					<param value="config.ini.save"/>
				</php>
			</then>
		</if>
        <delete file="${report_test_dir}/**" />
        <mkdir dir="${report_test_dir}" />
		<php function="define">
			<param value="PHPUnit_MAIN_METHOD"/>
			<param value="0"/>
		</php>
        <phpunit haltonfailure="false" failureproperty="unit_test_failure" errorproperty="unit_test_failure" printsummary="true">
            <batchtest>
                <fileset refid="testfile" />
            </batchtest>
            <formatter type="xml" todir="${report_test_dir}" outfile="logfile.xml" />
            <formatter type="plain" todir="${report_test_dir}" outfile="logfile.txt" />
        </phpunit>
	    <php function="copy">
			<param value="config.ini.save"/>
			<param value="www/config.ini"/>
		</php>
	    <php function="unlink">
			<param value="config.ini.save"/>
		</php>
        <phpunitreport infile="${report_test_dir}/logfile.xml" styledir="phing" format="frames" todir="${report_test_dir}" />
        <fail if="unit_test_failure" message="Unit tests failed!!!" />
	</target>


    <target name="cover">
        <delete file="${cover_report_dir}/*" />
        <mkdir dir="${cover_report_dir}" />
        <coverage-setup database="${cover_report_dir}/database">
            <fileset dir=".">
                <include name="**/*.php"/>
				<exclude name="phing/**"/>
				<exclude name="**/*Test.php"/>
				<exclude name="**/*Controller.php"/>
                <exclude name="${testdir}/**" />
                <exclude name="**/Abstract*.php" />
				<exclude name="**/bootstrap.php" />
				<exclude name="**/index.php" />
                <exclude name="scripts/**" />
            </fileset>
        </coverage-setup>

        <phpunit2 codecoverage="true">
            <batchtest>
                <fileset refid="testfile" />
            </batchtest>
        </phpunit2>

        <coverage-report outfile="${cover_report_dir}/coverage.xml">
            <report styledir="phing" todir="${cover_report_dir}"/>
        </coverage-report>
    </target>

  <target name="doc">
    <delete dir="${docdir}" />
    <mkdir dir="${docdir}" />
    <exec command="phpdoc -c phpDocumentor.ini"/>
  </target>

  <target name="reset">
    <exec command="php scripts/reset.php"/>
  </target>

  <target name="lint">
    <phplint>
        <fileset dir=".">
            <exclude name="${docdir}/**" />
            <exclude name="${report_test_dir}/**" />
            <include name="**/*.php"/>
        </fileset>
    </phplint>
</target>

    <target name="pear">
        <echo msg="############################################" />
        <echo msg="Don't forget to change release note" />
        <echo msg="############################################" />
        <pearpkg name="USVN" dir="." destFile="package.xml">
            <fileset refid="projectfile" />
            <option name="notes">${release_note}</option>
            <option name="description">USVN is a simple configuration tools for SVN</option>
            <option name="summary">Userfriendly SVN</option>
            <option name="version" value="${version}"/>
            <option name="state" value="${status}"/>
            <option name="license" value="${license}" />
            <mapping name="maintainers">
                <element>
                    <element key="handle" value="duponc_j"/>
                    <element key="name" value="Julien Duponchelle"/>
                    <element key="email" value="julien.duponchelle@noplay.net"/>
                    <element key="role" value="lead"/>
                </element>
                <element>
                    <element key="handle" value="crivis_s"/>
                    <element key="name" value="Stephane Crivisier"/>
                    <element key="email" value="stephane.crivisier@gmail.com"/>
                    <element key="role" value="developer"/>
                </element>
                <element>
                    <element key="handle" value="guyoll_o"/>
                    <element key="name" value="Olivier Guyollot"/>
                    <element key="email" value="olivier.guyollot@gmail.com"/>
                    <element key="role" value="developer"/>
                </element>
                <element>
                    <element key="handle" value="dolean_j"/>
                    <element key="name" value="Julien Doleans"/>
                    <element key="email" value="dolean_j@epitech.net"/>
                    <element key="role" value="developer"/>
                </element>
                <element>
                    <element key="handle" value="attal_m"/>
                    <element key="name" value="Mathieu Attal"/>
                    <element key="email" value="attal_m@epitech.net"/>
                    <element key="role" value="developer"/>
                </element>
                <element>
                    <element key="handle" value="joanic_g"/>
                    <element key="name" value="Gabriel Joanicot"/>
                    <element key="email" value="joanic_g@epitech.net"/>
                    <element key="role" value="communication"/>
                </element>
            </mapping>
        </pearpkg>
        <exec command="pear package-validate package.xml" checkreturn="true" passthru="true"/>
        <exec command="pear package package.xml" checkreturn="true" passthru="true"/>
    </target>


<!-- Translation -->
<target name="translation-compilation">
    <taskdef name="gettext-compilation" classname="phing.tasks.CompilationGetTextTask" />
    <gettext-compilation localedirectory="www/locale/" />
</target>

<target name="translation-findstr">
    <taskdef name="gettext-findstr" classname="phing.tasks.FindStrGetTextTask" />
    <gettext-findstr />
</target>

<!-- Archives -->
  <target name="tar">
    <mkdir dir="${archive_dir}" />
    <delete file="${archive_dir}/usvn-${version}.tgz" />
    <delete file="${archive_dir}/usvn-${version}.tgz.md5" />
    <delete file="${archive_dir}/usvn-doc-${version}.tgz" />
    <tar destfile="${archive_dir}/usvn-${version}.tgz" compression="gzip">
        <fileset refid="projectfile" />
    </tar>
    <php function="md5_file" returnProperty="md5file">
        <param value="${archive_dir}/usvn-${version}.tgz"/>
    </php>
    <echo msg="${md5file}" file="${archive_dir}/usvn-${version}.tgz.md5"/>
    <tar destfile="${archive_dir}/usvn-doc-${version}.tgz" compression="gzip">
      <fileset id="docfile" dir="${docdir}">
        <include name="**" />
      </fileset>
    </tar>
  </target>
</project>
